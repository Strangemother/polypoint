# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

## Upstream backend with keepalive connections
## add the following to your existing / server block
#        proxy_pass http://gunicorn_backend;      
#        # Enable HTTP/1.1 keepalive to backend (NEW)
#        proxy_http_version 1.1;
#        proxy_set_header Connection "";
## Then add this at the top level
# upstream gunicorn_backend {
#     server unix:/run/gunicorn/polypointjs.sock;
#     keepalive 32;  # Keep 32 idle connections open to backend
# }

# HTTP - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name polypointjs.com www.polypointjs.com polypoint.xyz www.polypoint.xyz poly.ink www.poly.ink;
    
    return 301 https://$host$request_uri;
}


# HTTPS - redirect secondary domains to canonical
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name www.polypointjs.com polypoint.xyz www.polypoint.xyz poly.ink www.poly.ink;
    
    ssl_certificate /etc/letsencrypt/live/polypointjs.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/polypointjs.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Redirect to canonical domain
    return 301 https://polypointjs.com$request_uri;
}


# HTTPS - canonical domain (main site)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name polypointjs.com;
    
    ssl_certificate /etc/letsencrypt/live/polypointjs.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/polypointjs.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # SSL session caching for performance (IMPROVED: increased cache size and timeout)
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    
    # SSL stapling for faster SSL handshakes (NEW)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/polypointjs.com/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # TCP optimizations (NEW)
    tcp_nopush on;      # Send headers and file beginning in one packet
    tcp_nodelay on;     # Disable Nagle's algorithm for better interactivity
    keepalive_timeout 65;     # Keep connections alive for 65 seconds
    keepalive_requests 100;   # Max 100 requests per connection

    client_max_body_size 20M;

    # Enhanced security headers (IMPROVED: tightened CSP)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # Note: Consider tightening this CSP by removing 'unsafe-inline' and 'unsafe-eval' 
    # Use nonces or hashes for inline scripts instead for better XSS protection
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

    # Custom log format for better analytics (NEW)
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time';
    access_log /var/log/nginx/polypointjs.access.log detailed;

    # Health check endpoint (NEW)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # robots.txt (NEW)
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # sitemap.xml (NEW)
    location = /sitemap.xml {
        access_log off;
        log_not_found off;
    }

    location /favicon.ico { 
        access_log off; 
        log_not_found off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    location /static/ {
        limit_req zone=static burst=100 nodelay;
        alias /home/site/apps/polypoint/site/beta/static/;
        
        # Enable gzip for pre-compressed files
        gzip_static on;
        
        # Specific caching rules for different file types (NEW)
        location ~ \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        location ~ \.(css|js|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        location ~ \.(json|xml|txt)$ {
            expires 7d;
            add_header Cache-Control "public";
        }
        
        # Block executable files
        location ~ \.(php|py|pl|sh|exe|bat)$ {
            deny all;
        }
    }
 
    location /media/ {
        limit_req zone=general burst=20 nodelay;
        alias /home/site/apps/polypoint/site/beta/media/;
        
        # Cache media files (ENABLED)
        expires 30d;
        add_header Cache-Control "public";
     
        # Block executable files
        location ~ \.(php|py|pl|sh|exe|bat)$ {
            deny all;
        }
    }

    location / {
        limit_req zone=api burst=50 nodelay;
        limit_req_status 429;
        
        include proxy_params;
        proxy_pass http://gunicorn_backend;
        
        # Enable HTTP/1.1 keepalive to backend (NEW)
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Proxy performance optimization
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Proxy cache control (NEW - commented out, enable if needed)
        # proxy_cache_bypass $http_upgrade;
        # proxy_no_cache $http_pragma $http_authorization;
    }
  
    # Deny access to hidden files (.git, .env, etc)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom 429 error page (NEW)
    error_page 429 /429.html;
    location = /429.html {
        internal;
        default_type text/html;
        return 429 '<!DOCTYPE html>
<html>
<head>
    <title>Too Many Requests</title>
    <style>
        body { font-family: sans-serif; max-width: 600px; margin: 50px auto; padding: 20px; }
        h1 { color: #d32f2f; }
    </style>
</head>
<body>
    <h1>429 - Too Many Requests</h1>
    <p>You have made too many requests. Please wait a moment and try again.</p>
</body>
</html>';
    }

    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
        internal;
    }
}
